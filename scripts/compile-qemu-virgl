#!/bin/bash
  set -e

  # Script to compile QEMU with virgl support
  QEMU_SRC="$1"
  if [ -z "$QEMU_SRC" ]; then
    echo "Usage: $0 <path-to-qemu-source>"
    exit 1
  fi

  # Find the path to the Homebrew prefix by looking at this script's location
  SCRIPT_PATH="$(dirname "$(realpath "$0")")"
  HOMEBREW_PREFIX="$(dirname "$(dirname "$SCRIPT_PATH")")"
  
  # Derive paths for binaries and patches
  ADD_OPTION="$HOMEBREW_PREFIX/bin/add-opengl-core-option"
  APPLY_PATCH="$HOMEBREW_PREFIX/bin/apply-headers-patch"
  QEMU_VIRGL_LIB="$HOMEBREW_PREFIX/lib/qemu-virgl"
  QEMU_VIRGL_INCLUDE="$HOMEBREW_PREFIX/include/qemu-virgl"
  PATCH_DIR="$HOMEBREW_PREFIX/share/qemu-virgl-deps"
  
  cd "$QEMU_SRC"
  
  # Check if we should use OpenGL Core
  if [ -f "$ADD_OPTION" ] && [ -f "$APPLY_PATCH" ]; then
    echo "===== Adding OpenGL Core option to QEMU meson build ====="
    "$ADD_OPTION" "$QEMU_SRC"
    
    echo "===== Applying EGL headers patch for OpenGL Core ====="
    "$APPLY_PATCH" "$QEMU_SRC"
    
    # Verify the option was added
    if grep -q "option('opengl_core'" meson_options.txt; then
      echo "âœ“ Successfully added OpenGL Core option"
      OPENGL_FLAGS="--meson-option=opengl_core=true"
    else
      echo "ERROR: Failed to add OpenGL Core option to meson_options.txt"
      exit 1
    fi
  else
    OPENGL_FLAGS=""
  fi

  mkdir -p build
  cd build
  
  # Set up environment
  export PKG_CONFIG_PATH="$QEMU_VIRGL_LIB/pkgconfig:$PKG_CONFIG_PATH"
  
  # Configure with appropriate options
  echo "===== Configuring QEMU ====="
  ../configure --prefix=/usr/local \\
    --enable-opengl \\
    --enable-virglrenderer \\
    --extra-cflags="-I$QEMU_VIRGL_INCLUDE" \\
    --extra-ldflags="-L$QEMU_VIRGL_LIB" \\
    $OPENGL_FLAGS

  echo "===== QEMU configured successfully ====="
  echo "Now run: cd build && make -j$(sysctl -n hw.ncpu)"
