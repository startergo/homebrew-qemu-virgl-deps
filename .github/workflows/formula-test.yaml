name: Formula Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  opengl-core-build:
    runs-on: macos-latest
    name: OpenGL Core build
    
    steps:
    # Step 1: Check out the repository
    - name: Checkout repository
      uses: actions/checkout@v4

    # Step 2: Basic formula check
    - name: Check formula syntax
      run: |
        echo "Checking formula for syntax..."
        ruby -c Formula/qemu-virgl-deps.rb
        brew style Formula/qemu-virgl-deps.rb || true

    # Step 3: Tap the repository
    - name: Tap the repository
      run: |
        brew tap startergo/homebrew-qemu-virgl-deps

    # Step 4: Install the formula with OpenGL Core
    - name: Install formula with OpenGL Core
      run: |
        echo "Installing with OpenGL Core profile..."
        brew install qemu-virgl-deps --with-opengl-core

    # Step 4.5: Ensure helper scripts are in PATH
    - name: Setup PATH for helper scripts
      run: |
        # Add the formula's bin directory to PATH
        export PATH="$(brew --prefix)/opt/qemu-virgl-deps/bin:$PATH"
        echo "PATH=$PATH" >> $GITHUB_ENV
        
        # Check if the scripts exist and are executable
        ls -la $(brew --prefix)/opt/qemu-virgl-deps/bin/
        
        # Test if we can find the scripts now
        which fetch-qemu-version || echo "fetch-qemu-version not found"
        which apply-3dfx-patches || echo "apply-3dfx-patches not found"
        which compile-qemu-virgl || echo "compile-qemu-virgl not found"
        which qemu-virgl || echo "qemu-virgl not found"

    # Step 5: Fetch QEMU source
    - name: Fetch QEMU source
      run: |
        export PATH="$(brew --prefix)/opt/qemu-virgl-deps/bin:$PATH"
        fetch-qemu-version 8.2.1 source/qemu

    # Step 6: Apply 3D enhancement patches
    - name: Apply 3D enhancement patches
      run: |
        apply-3dfx-patches source/qemu

    # Step 7: Configure and build QEMU
    - name: Configure and build QEMU
      run: |
        compile-qemu-virgl source/qemu --opengl-core
        cd source/qemu/build && make -j$(sysctl -n hw.ncpu)

    # Step 8: Verify QEMU execution
    - name: Verify QEMU execution
      run: |
        qemu-virgl $(brew --prefix)/bin/qemu-system-x86_64 -display cocoa,gl=core --version
      
    # Step 9: Create binary package
    - name: Create binary package
      run: |
        mkdir -p artifacts
        cd source/qemu
        make install DESTDIR=$(pwd)/../../artifacts/qemu-8.2.1-opengl-core
        cd ../../
        tar -czf qemu-8.2.1-opengl-core.tar.gz -C artifacts qemu-8.2.1-opengl-core

    # Step 10: Upload artifacts
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: qemu-8.2.1-opengl-core
        path: qemu-8.2.1-opengl-core.tar.gz
        retention-days: 7

  standard-build:
    runs-on: macos-latest
    name: Standard build with ANGLE
    
    steps:
    # Step 1: Check out the repository
    - name: Checkout repository
      uses: actions/checkout@v4

    # Step 2: Fix ANGLE pkg-config files
    - name: Update ANGLE pkg-config files
      run: |
        # Create macOS-compatible versions of the pkg-config files
        cat > angle/egl.pc << EOF
        prefix=$(pwd)/angle
        exec_prefix=\${prefix}
        libdir=\${prefix}
        includedir=\${prefix}/include

        Name: egl
        Description: ANGLE EGL implementation for macOS
        Version: 18.2.8
        Libs: -framework OpenGL
        Cflags: -I\${includedir}
        EOF

        cat > angle/glesv2.pc << EOF
        prefix=$(pwd)/angle
        exec_prefix=\${prefix}
        libdir=\${prefix}
        includedir=\${prefix}/include

        Name: glesv2
        Description: ANGLE OpenGL ES 2.0 implementation for macOS
        Version: 18.2.8
        Libs: -framework OpenGL
        Cflags: -I\${includedir}
        EOF

        echo "Updated pkg-config files:"
        cat angle/egl.pc
        cat angle/glesv2.pc

    # Step 3: Tap the repository
    - name: Tap the repository
      run: |
        brew tap startergo/homebrew-qemu-virgl-deps

    # Step 4: Install formula for standard build with ANGLE
    - name: Install formula with ANGLE support
      run: |
        echo "Installing with ANGLE/EGL support..."
        
        # Export the full absolute path to ANGLE headers
        export ANGLE_HEADERS_PATH="$(pwd)/angle"
        echo "Using ANGLE headers from: $ANGLE_HEADERS_PATH"
        
        # Make sure pkg-config can find our custom .pc files
        export PKG_CONFIG_PATH="$ANGLE_HEADERS_PATH:$PKG_CONFIG_PATH"
        
        # Install additional dependencies that might be needed
        brew install ninja meson pkg-config python3
        
        # Install our formula with verbose output and no cleanup
        HOMEBREW_NO_INSTALL_CLEANUP=1 HOMEBREW_NO_AUTO_UPDATE=1 brew install --verbose qemu-virgl-deps || {
          echo "Formula installation failed, checking logs:"
          for log in /Users/runner/Library/Logs/Homebrew/qemu-virgl-deps/*.cc; do
            echo "=== $log ==="
            cat $log
          done
          exit 1
        }
        
        # Verify the installation
        brew list qemu-virgl-deps
        ls -la $(brew --prefix)/opt/qemu-virgl-deps/bin/

    # Step 4.5: Ensure helper scripts are in PATH
    - name: Setup PATH for helper scripts
      run: |
        # Add the formula's bin directory to PATH
        export PATH="$(brew --prefix)/opt/qemu-virgl-deps/bin:$PATH"
        echo "PATH=$PATH" >> $GITHUB_ENV
        
        # Check if the scripts exist and are executable
        ls -la $(brew --prefix)/opt/qemu-virgl-deps/bin/
        
        # Test if we can find the scripts now
        which fetch-qemu-version
        which apply-3dfx-patches
        which compile-qemu-virgl

    # Step 5: Fetch QEMU source
    - name: Fetch QEMU source
      run: |
        fetch-qemu-version 9.2.1 source/qemu

    # Step 6: Configure and build QEMU
    - name: Configure and build QEMU
      run: |
        compile-qemu-virgl source/qemu
        cd source/qemu/build && make -j$(sysctl -n hw.ncpu)

    # Step 7: Verify QEMU execution
    - name: Verify QEMU execution
      run: |
        qemu-virgl $(brew --prefix)/bin/qemu-system-x86_64 -display cocoa,gl=es --version
      
    # Step 8: Create binary package
    - name: Create binary package
      run: |
        mkdir -p artifacts
        cd source/qemu
        make install DESTDIR=$(pwd)/../../artifacts/qemu-9.2.1-standard
        cd ../../
        tar -czf qemu-9.2.1-standard.tar.gz -C artifacts qemu-9.2.1-standard

    # Step 9: Upload artifacts
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: qemu-9.2.1-standard
        path: qemu-9.2.1-standard.tar.gz
        retention-days: 7
